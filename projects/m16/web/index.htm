<!DOCTYPE html><html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/extjs/6.2.0/ext-modern-all-debug.js"></script>

    <link rel="stylesheet" type="text/css" href="http://cdnjs.cloudflare.com/ajax/libs/extjs/6.2.0/modern/theme-material/resources/theme-material-all-debug.css">
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/extjs/6.2.0/modern/theme-material/theme-material-debug.js"></script>

    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.2.0/packages/charts/classic/classic/resources/charts-all-debug.css">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.2.0/packages/charts/modern/charts-debug.js"></script>

    <script type="text/javascript">
    Ext.define('MyApp.view.ToolsController', {
      extend: 'Ext.app.ViewController',
      alias: 'controller.tools',

      onPaletteChange: function(c, v) {
        var c = this.lookupReference('palette');
        c.setActiveItem(v.data.value);
      },

      onColorChange: function(v,fs) {
        var p = this.lookupReference('canvas');
        p.value = v;
        p.fillStyle = fs;
      },

      onSizeChange: function() {
        var h = parseInt(this.lookupReference('height').getValue());
        var w = parseInt(this.lookupReference('width').getValue());

        var s = 512 / Math.max(h,w);

        var sprites = [];
        for (var x = 0; x < w; x++) {
          for (var y = 0; y < h; y++) {
            sprites.push({ type: 'rect', 'x': x*s, 'y': y*s, i: (y*w)+x, width: s, height:s, fillStyle: '#000', strokeStyle: '#ccc' })
          }
        }

        var c = this.lookupReference('canvas');
        c.getSurface().removeAll();
        c.getSurface().add(sprites);
        c.getSurface().renderFrame();
      }

    });

    Ext.application({
        name: 'icon editor',

        launch: function() {
          Ext.Viewport.setController('tools');
            Ext.Viewport.add([{
              xtype: 'toolbar',
              docked: 'top',
              title: 'Icon Editor',
              items: [{
                xtype: 'button',
                iconCls: 'x-fa fa-step-backward'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-play'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-step-forward'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-arrow-up'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-arrow-down'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-plus'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-minus'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-trash-o'
              },{
                xtype: 'button',
                iconCls: 'x-fa fa-hdd-o'
              }]
            },{
              xtype: 'panel',
              layout: 'hbox',
              padding: 0,
              items: [{
                padding: 0,
                border: true,
                xtype: 'panel',
                layout: 'vbox',
                width: 250,
                items: [{
                  xtype: 'formpanel',
                  items: [{
                    xtype: 'textfield',
                    reference: 'ip',
                    label: 'Device IP'
                  },{
                    xtype: 'fieldset',
                    title: 'Image',
                    items: [{
                      xtype: 'textfield',
                      reference: 'width',
                      label: 'Width',
                      value: '16',
                      required: true,
                      listeners: {
                        change: 'onSizeChange'
                      }
                    },{
                      xtype: 'textfield',
                      reference: 'height',
                      label: 'Height',
                      value: '16',
                      required: true,
                      listeners: {
                        change: 'onSizeChange'
                      }
                    },{
                      xtype: 'selectfield',
                      reference: 'selectpalette',
                      label: 'Palette',
                      value: 3,
                      options: [{
                        text: '1 bpp: monochrome',
                        value: 0
                      },{
                        text: '4 bpp: 16 grays',
                        value: 1
                      },{
                        text: '4 bpp: 16 colours',
                        value: 2
                      },{
                        text: '8 bpp: 64 colours',
                        value: 3
                      }],
                      listeners: {
                        change: 'onPaletteChange'
                      }
                    }]
                  },{
                    xtype: 'fieldset',
                    title: 'Frame',
                    items: [{
                      xtype: 'sliderfield',
                      reference: 'delay',
                      label: 'Delay',
                      value: 0,
                      minValue: 0,
                      maxValue: 63
                    }]
                  },{
                    xtype: 'fieldset',
                    title: 'Pixel',
                    items: [{
                      xtype: 'panel',
                      layout: 'card',
                      reference: 'palette',
                      label: 'Colour',
                      height: 200,
                      activeItem: 3,
                      items: [{
                        xtype: 'palette0',
                        listeners: {change: 'onColorChange'}
                      },{
                        xtype: 'palette1',
                        listeners: {change: 'onColorChange'}
                      },{
                        xtype: 'palette2',
                        listeners: {change: 'onColorChange'}
                      },{
                        xtype: 'palette3',
                        listeners: {change: 'onColorChange'}
                      }]
                    }]
                  }]
                }]
            },{
              xtype: 'panel',
              flex: 1,
              border: true,
              items: [{
                xtype: 'draw',
                plugins: ['spriteevents'],
                color: '#ccc',
                reference: 'canvas',
                centered: true,
                border: true,
                width: 512,
                height: 512,
                fillStyle: '#000',
                color: 0,
                listeners: {
                  spriteclick: function (item, event) {
                    var sprite = item && item.sprite;
                    if (sprite) {
                      sprite.setAttributes({fillStyle: this.fillStyle, value: this.value});
                      sprite.getSurface().renderFrame();
                    }
                  }
                }
              }]
            },{
              border: true,
              xtype: 'panel',
              layout: 'fit',
              width: 100,
              items: [{
                xtype: 'list',
                itemTpl: '{title}',
                data: [
                  { title: 'Item 1' },
                  { title: 'Item 2' },
                  { title: 'Item 3' },
                  { title: 'Item 4' }
                ]
              }]
            }
          ]
        }]);
      }
    });

    Ext.define('MyApp.window.New', {

    })

    Ext.define('MyApp.view.Palette0', {
      extend: 'Ext.draw.Container',
      alias: 'widget.palette0',
      plugins: ['spriteevents'],
      sprites: [
        { type: 'hexagon', x: 80, y: 20, l: 39, fillStyle: '#fff', strokeStyle: '#aaa', value: 1 },
        { type: 'hexagon', x: 160, y: 20, l: 39, fillStyle: '#000', value: 0 },
      ],
      listeners: {
        spriteclick: function (item, event) {
          var sprite = item && item.sprite;
          if (sprite) {
            this.fireEvent('change', sprite.value, sprite.fillStyle)
          }
        }
      }
    });

    Ext.define('MyApp.view.Palette1', {
      extend: 'Ext.draw.Container',
      alias: 'widget.palette1',
      plugins: ['spriteevents'],
      sprites: [
        { type: 'hexagon', x: 70, y: 10, l: 19, fillStyle: '#000', value: 0 },
        { type: 'hexagon', x: 50, y: 40, l: 19, fillStyle: '#111', value: 1 },
        { type: 'hexagon', x: 30, y: 70, l: 19, fillStyle: '#222', value: 2 },
        { type: 'hexagon', x: 50, y: 100, l: 19, fillStyle: '#333', value: 3 },
        { type: 'hexagon', x: 70, y: 70, l: 19, fillStyle: '#444', value: 4 },
        { type: 'hexagon', x: 90, y: 40, l: 19, fillStyle: '#555', value: 5 },
        { type: 'hexagon', x: 110, y: 10, l: 19, fillStyle: '#666', value: 6 },
        { type: 'hexagon', x: 150, y: 10, l: 19, fillStyle: '#777', value: 7 },
        { type: 'hexagon', x: 130, y: 40, l: 19, fillStyle: '#888', value: 8 },
        { type: 'hexagon', x: 110, y: 70, l: 19, fillStyle: '#999', value: 9 },
        { type: 'hexagon', x: 90, y: 100, l: 19, fillStyle: '#aaa', value: 10 },
        { type: 'hexagon', x: 130, y: 100, l: 19, fillStyle: '#bbb', value: 11 },
        { type: 'hexagon', x: 150, y: 70, l: 19, fillStyle: '#ccc', value: 12 },
        { type: 'hexagon', x: 170, y: 40, l: 19, fillStyle: '#ddd', value: 13 },
        { type: 'hexagon', x: 190, y: 70, l: 19, fillStyle: '#eee', value: 14 },
        { type: 'hexagon', x: 170, y: 100, l: 19, fillStyle: '#fff', value: 15, strokeStyle: '#aaa' },
      ],
      listeners: {
        spriteclick: function (item, event) {
          var sprite = item && item.sprite;
          if (sprite) {
            this.fireEvent('change', sprite.value, sprite.fillStyle)
          }
        }
      }
    });

    Ext.define('MyApp.view.Palette2', {
      extend: 'Ext.draw.Container',
      alias: 'widget.palette2',
      plugins: ['spriteevents'],
      sprites: [
        { type: 'hexagon', x: 150, y: 70, l: 19, fillStyle: '#f55', value: 4 },
    		{ type: 'hexagon', x: 190, y: 70, l: 19, fillStyle: '#a00', value: 12 },
    		{ type: 'hexagon', x: 130, y: 40, l: 19, fillStyle: '#ff5', value: 6 },
    		{ type: 'hexagon', x: 150, y: 10, l: 19, fillStyle: '#a50', value: 14 },
    		{ type: 'hexagon', x: 90, y: 40, l: 19, fillStyle: '#5f5', value: 2 },
    		{ type: 'hexagon', x: 70, y: 10, l: 19, fillStyle: '#0a0', value: 10 },
        { type: 'hexagon', x: 70, y: 70, l: 19, fillStyle: '#5ff', value: 3 },
    		{ type: 'hexagon', x: 30, y: 70, l: 19, fillStyle: '#0aa', value: 11 },
        { type: 'hexagon', x: 90, y: 100, l: 19, fillStyle: '#55f', value: 1 },
    		{ type: 'hexagon', x: 70, y: 130, l: 19, fillStyle: '#00a', value: 9 },
    		{ type: 'hexagon', x: 130, y: 100, l: 19, fillStyle: '#f5f', value: 5 },
        { type: 'hexagon', x: 150, y: 130, l: 19, fillStyle: '#a0a', value: 13 },
    		{ type: 'hexagon', x: 50, y: 100, l: 19, fillStyle: '#000', value: 0 },
    		{ type: 'hexagon', x: 170, y: 100, l: 19, fillStyle: '#555', value: 8 },
    		{ type: 'hexagon', x: 110, y: 10, l: 19, fillStyle: '#aaa', value: 7 },
    		{ type: 'hexagon', x: 110, y: 70, l: 19, fillStyle: '#fff', value: 15, strokeStyle: '#aaa' }
      ],
      listeners: {
        spriteclick: function (item, event) {
          var sprite = item && item.sprite;
          if (sprite) {
            this.fireEvent('change', sprite.value, sprite.fillStyle)
          }
        }
      }
    });

    Ext.define('MyApp.view.Palette3', {
      extend: 'Ext.draw.Container',
      alias: 'widget.palette3',
      plugins: ['spriteevents'],
      initialize: function() {
        this.sprites_x = [
          { type: 'hexagon', x: 30, y: 130, l: 9, fillStyle: '#000', strokeStyle: '#a00', value: 0 },
          { type: 'hexagon', x: 50, y: 130, l: 9, fillStyle: '#111', value: 1 },
          { type: 'hexagon', x: 70, y: 130, l: 9, fillStyle: '#333', value: 3 },
          { type: 'hexagon', x: 90, y: 130, l: 9, fillStyle: '#555', value: 85 },
          { type: 'hexagon', x: 110, y: 130, l: 9, fillStyle: '#777', value: 87 },
          { type: 'hexagon', x: 130, y: 130, l: 9, fillStyle: '#999', value: 169 },
          { type: 'hexagon', x: 150, y: 130, l: 9, fillStyle: '#bbb', value: 171 },
          { type: 'hexagon', x: 170, y: 130, l: 9, fillStyle: '#ddd', value: 253 },
          { type: 'hexagon', x: 190, y: 130, l: 9, fillStyle: '#fff', strokeStyle: '#aaa', value: 255 }
        ];
        // L = 11, 55, 99, DD
        // H = 33, 77, BB, FF

        this.sprites_f = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#fbb', value: 58 },
          { type: 'hexagon', x: 150, y: 70, l: 9, fillStyle: '#f77', value: 53 },
          { type: 'hexagon', x: 170, y: 70, l: 9, fillStyle: '#f33', value: 48 },

          { type: 'hexagon', x: 140, y: 55, l: 9, fillStyle: '#fb7', value: 57 },
          { type: 'hexagon', x: 150, y: 40, l: 9, fillStyle: '#fb3', value: 56 },
          { type: 'hexagon', x: 160, y: 55, l: 9, fillStyle: '#f73', value: 52 },

          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#ffb', value: 62 },
          { type: 'hexagon', x: 130, y: 40, l: 9, fillStyle: '#ff7', value: 61 },
          { type: 'hexagon', x: 140, y: 25, l: 9, fillStyle: '#ff3', value: 60 },

          { type: 'hexagon', x: 110, y: 40, l: 9, fillStyle: '#bf7', value: 45 },
          { type: 'hexagon', x: 120, y: 25, l: 9, fillStyle: '#bf3', value: 44 },
          { type: 'hexagon', x: 100, y: 25, l: 9, fillStyle: '#7f3', value: 28 },

          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#bfb', value: 46 },
          { type: 'hexagon', x: 90, y: 40, l: 9, fillStyle: '#7f7', value: 29 },
          { type: 'hexagon', x: 80, y: 25, l: 9, fillStyle: '#3f3', value: 12 },

          { type: 'hexagon', x: 80, y: 55, l: 9, fillStyle: '#7fb', value: 30 },
          { type: 'hexagon', x: 60, y: 55, l: 9, fillStyle: '#3fb', value: 14 },
          { type: 'hexagon', x: 70, y: 40, l: 9, fillStyle: '#3f7', value: 13 },

          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#bff', value: 47 },
          { type: 'hexagon', x: 70, y: 70, l: 9, fillStyle: '#7ff', value: 31 },
          { type: 'hexagon', x: 50, y: 70, l: 9, fillStyle: '#3ff', value: 15 },

          { type: 'hexagon', x: 80, y: 85, l: 9, fillStyle: '#7bf', value: 27 },
          { type: 'hexagon', x: 60, y: 85, l: 9, fillStyle: '#3bf', value: 11 },
          { type: 'hexagon', x: 70, y: 100, l: 9, fillStyle: '#37f', value: 7 },

          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#bbf', value: 43 },
          { type: 'hexagon', x: 90, y: 100, l: 9, fillStyle: '#77f', value: 23 },
          { type: 'hexagon', x: 80, y: 115, l: 9, fillStyle: '#33f', value: 3 },

          { type: 'hexagon', x: 110, y: 100, l: 9, fillStyle: '#b7f', value: 39 },
          { type: 'hexagon', x: 120, y: 115, l: 9, fillStyle: '#b3f', value: 35 },
          { type: 'hexagon', x: 100, y: 115, l: 9, fillStyle: '#73f', value: 19 },

          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#fbf', value: 59 },
          { type: 'hexagon', x: 130, y: 100, l: 9, fillStyle: '#f7f', value: 55 },
          { type: 'hexagon', x: 140, y: 115, l: 9, fillStyle: '#f3f', value: 51 },

          { type: 'hexagon', x: 140, y: 85, l: 9, fillStyle: '#f7b', value: 54 },
          { type: 'hexagon', x: 150, y: 100, l: 9, fillStyle: '#f3b', value: 50 },
          { type: 'hexagon', x: 160, y: 85, l: 9, fillStyle: '#f37', value: 49 },

          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#fff', strokeStyle: '#bbb', value: 63 }
        ].concat(this.sprites_x);
        this.sprites_d = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#d99', value: 58 },
          { type: 'hexagon', x: 150, y: 70, l: 9, fillStyle: '#d55', value: 53 },
          { type: 'hexagon', x: 170, y: 70, l: 9, fillStyle: '#d11', value: 48 },

          { type: 'hexagon', x: 140, y: 55, l: 9, fillStyle: '#d95', value: 57 },
          { type: 'hexagon', x: 150, y: 40, l: 9, fillStyle: '#d91', value: 56 },
          { type: 'hexagon', x: 160, y: 55, l: 9, fillStyle: '#d51', value: 52 },

          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#dd9', value: 62 },
          { type: 'hexagon', x: 130, y: 40, l: 9, fillStyle: '#dd5', value: 61 },
          { type: 'hexagon', x: 140, y: 25, l: 9, fillStyle: '#dd1', value: 60 },

          { type: 'hexagon', x: 110, y: 40, l: 9, fillStyle: '#9d5', value: 45 },
          { type: 'hexagon', x: 120, y: 25, l: 9, fillStyle: '#9d1', value: 44 },
          { type: 'hexagon', x: 100, y: 25, l: 9, fillStyle: '#5d1', value: 28 },

          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#9d9', value: 46 },
          { type: 'hexagon', x: 90, y: 40, l: 9, fillStyle: '#5d5', value: 29 },
          { type: 'hexagon', x: 80, y: 25, l: 9, fillStyle: '#1d1', value: 12 },

          { type: 'hexagon', x: 80, y: 55, l: 9, fillStyle: '#5d9', value: 30 },
          { type: 'hexagon', x: 60, y: 55, l: 9, fillStyle: '#1d9', value: 14 },
          { type: 'hexagon', x: 70, y: 40, l: 9, fillStyle: '#1d5', value: 13 },

          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#9dd', value: 47 },
          { type: 'hexagon', x: 70, y: 70, l: 9, fillStyle: '#5dd', value: 31 },
          { type: 'hexagon', x: 50, y: 70, l: 9, fillStyle: '#1dd', value: 15 },

          { type: 'hexagon', x: 80, y: 85, l: 9, fillStyle: '#59d', value: 27 },
          { type: 'hexagon', x: 60, y: 85, l: 9, fillStyle: '#19d', value: 11 },
          { type: 'hexagon', x: 70, y: 100, l: 9, fillStyle: '#15d', value: 7 },

          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#99d', value: 43 },
          { type: 'hexagon', x: 90, y: 100, l: 9, fillStyle: '#55d', value: 23 },
          { type: 'hexagon', x: 80, y: 115, l: 9, fillStyle: '#11d', value: 3 },

          { type: 'hexagon', x: 110, y: 100, l: 9, fillStyle: '#95d', value: 39 },
          { type: 'hexagon', x: 120, y: 115, l: 9, fillStyle: '#91d', value: 35 },
          { type: 'hexagon', x: 100, y: 115, l: 9, fillStyle: '#51d', value: 19 },

          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#d9d', value: 59 },
          { type: 'hexagon', x: 130, y: 100, l: 9, fillStyle: '#d5d', value: 55 },
          { type: 'hexagon', x: 140, y: 115, l: 9, fillStyle: '#d1d', value: 51 },

          { type: 'hexagon', x: 140, y: 85, l: 9, fillStyle: '#d59', value: 54 },
          { type: 'hexagon', x: 150, y: 100, l: 9, fillStyle: '#d19', value: 50 },
          { type: 'hexagon', x: 160, y: 85, l: 9, fillStyle: '#d15', value: 49 },

          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#ddd', value: 63 }
        ].concat(this.sprites_x);
        this.sprites_b = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#b77', value: 37 },
          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#bb7', value: 41 },
          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#7b7', value: 25 },
          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#7bb', value: 26 },
          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#77b', value: 22 },
          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#b7b', value: 38 },
          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#bbb', value: 42 }
        ].concat(this.sprites_x);
        this.sprites_9 = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#955', value: 37 },
          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#995', value: 41 },
          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#595', value: 25 },
          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#599', value: 26 },
          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#559', value: 22 },
          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#959', value: 38 },
          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#999', value: 42 }
        ].concat(this.sprites_x);
        this.sprites_7 = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#b77', value: 37 },
          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#bb7', value: 41 },
          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#7b7', value: 25 },
          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#7bb', value: 26 },
          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#77b', value: 22 },
          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#b7b', value: 38 },
          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#777', value: 21 }
        ].concat(this.sprites_x);
        this.sprites_5 = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#955', value: 37 },
          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#995', value: 41 },
          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#595', value: 25 },
          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#599', value: 26 },
          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#559', value: 22 },
          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#959', value: 38 },
          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#555', value: 42 }
        ].concat(this.sprites_x);
        this.sprites_3 = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#733', value: 16 },
          { type: 'hexagon', x: 150, y: 70, l: 9, fillStyle: '#b33', value: 32 },
          { type: 'hexagon', x: 170, y: 70, l: 9, fillStyle: '#f33', value: 48 },

          { type: 'hexagon', x: 140, y: 55, l: 9, fillStyle: '#b73', value: 36 },
          { type: 'hexagon', x: 160, y: 55, l: 9, fillStyle: '#f73', value: 52 },
          { type: 'hexagon', x: 150, y: 40, l: 9, fillStyle: '#fb3', value: 56 },

          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#773', value: 20 },
          { type: 'hexagon', x: 130, y: 40, l: 9, fillStyle: '#bb3', value: 40 },
          { type: 'hexagon', x: 140, y: 25, l: 9, fillStyle: '#ff3', value: 60 },

          { type: 'hexagon', x: 110, y: 40, l: 9, fillStyle: '#7b3', value: 24 },
          { type: 'hexagon', x: 100, y: 25, l: 9, fillStyle: '#7f3', value: 28 },
          { type: 'hexagon', x: 120, y: 25, l: 9, fillStyle: '#bf3', value: 44 },

          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#373', value: 4 },
          { type: 'hexagon', x: 90, y: 40, l: 9, fillStyle: '#3b3', value: 8 },
          { type: 'hexagon', x: 80, y: 25, l: 9, fillStyle: '#3f3', value: 12 },

          { type: 'hexagon', x: 80, y: 55, l: 9, fillStyle: '#3b7', value: 9 },
          { type: 'hexagon', x: 70, y: 40, l: 9, fillStyle: '#3f7', value: 13 },
          { type: 'hexagon', x: 60, y: 55, l: 9, fillStyle: '#3fb', value: 14 },

          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#377', value: 5 },
          { type: 'hexagon', x: 70, y: 70, l: 9, fillStyle: '#3bb', value: 10 },
          { type: 'hexagon', x: 50, y: 70, l: 9, fillStyle: '#3ff', value: 15 },

          { type: 'hexagon', x: 80, y: 85, l: 9, fillStyle: '#37b', value: 6 },
          { type: 'hexagon', x: 70, y: 100, l: 9, fillStyle: '#37f', value: 7 },
          { type: 'hexagon', x: 60, y: 85, l: 9, fillStyle: '#3bf', value: 11 },

          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#337', value: 1 },
          { type: 'hexagon', x: 90, y: 100, l: 9, fillStyle: '#33b', value: 2 },
          { type: 'hexagon', x: 80, y: 115, l: 9, fillStyle: '#33f', value: 3 },

          { type: 'hexagon', x: 110, y: 100, l: 9, fillStyle: '#73b', value: 18 },
          { type: 'hexagon', x: 100, y: 115, l: 9, fillStyle: '#73f', value: 19 },
          { type: 'hexagon', x: 120, y: 115, l: 9, fillStyle: '#b3f', value: 35 },

          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#737', value: 17 },
          { type: 'hexagon', x: 130, y: 100, l: 9, fillStyle: '#b3b', value: 34 },
          { type: 'hexagon', x: 140, y: 115, l: 9, fillStyle: '#f3f', value: 51 },

          { type: 'hexagon', x: 140, y: 85, l: 9, fillStyle: '#b37', value: 33 },
          { type: 'hexagon', x: 160, y: 85, l: 9, fillStyle: '#f37', value: 49 },
          { type: 'hexagon', x: 150, y: 100, l: 9, fillStyle: '#f3b', value: 50 },

          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#333', value: 0 }
        ].concat(this.sprites_x);
        this.sprites_1 = [
          { type: 'hexagon', x: 130, y: 70, l: 9, fillStyle: '#511', value: 16 },
          { type: 'hexagon', x: 150, y: 70, l: 9, fillStyle: '#911', value: 32 },
          { type: 'hexagon', x: 170, y: 70, l: 9, fillStyle: '#d11', value: 48 },

          { type: 'hexagon', x: 140, y: 55, l: 9, fillStyle: '#951', value: 36 },
          { type: 'hexagon', x: 160, y: 55, l: 9, fillStyle: '#d51', value: 52 },
          { type: 'hexagon', x: 150, y: 40, l: 9, fillStyle: '#d91', value: 56 },

          { type: 'hexagon', x: 120, y: 55, l: 9, fillStyle: '#551', value: 20 },
          { type: 'hexagon', x: 130, y: 40, l: 9, fillStyle: '#991', value: 40 },
          { type: 'hexagon', x: 140, y: 25, l: 9, fillStyle: '#dd1', value: 60 },

          { type: 'hexagon', x: 110, y: 40, l: 9, fillStyle: '#591', value: 24 },
          { type: 'hexagon', x: 100, y: 25, l: 9, fillStyle: '#5d1', value: 28 },
          { type: 'hexagon', x: 120, y: 25, l: 9, fillStyle: '#9d1', value: 44 },

          { type: 'hexagon', x: 100, y: 55, l: 9, fillStyle: '#151', value: 4 },
          { type: 'hexagon', x: 90, y: 40, l: 9, fillStyle: '#191', value: 8 },
          { type: 'hexagon', x: 80, y: 25, l: 9, fillStyle: '#1d1', value: 12 },

          { type: 'hexagon', x: 80, y: 55, l: 9, fillStyle: '#195', value: 9 },
          { type: 'hexagon', x: 70, y: 40, l: 9, fillStyle: '#1d5', value: 13 },
          { type: 'hexagon', x: 60, y: 55, l: 9, fillStyle: '#1d9', value: 14 },

          { type: 'hexagon', x: 90, y: 70, l: 9, fillStyle: '#155', value: 5 },
          { type: 'hexagon', x: 70, y: 70, l: 9, fillStyle: '#199', value: 10 },
          { type: 'hexagon', x: 50, y: 70, l: 9, fillStyle: '#1dd', value: 15 },

          { type: 'hexagon', x: 80, y: 85, l: 9, fillStyle: '#159', value: 6 },
          { type: 'hexagon', x: 70, y: 100, l: 9, fillStyle: '#15d', value: 7 },
          { type: 'hexagon', x: 60, y: 85, l: 9, fillStyle: '#19d', value: 11 },

          { type: 'hexagon', x: 100, y: 85, l: 9, fillStyle: '#115', value: 1 },
          { type: 'hexagon', x: 90, y: 100, l: 9, fillStyle: '#119', value: 2 },
          { type: 'hexagon', x: 80, y: 115, l: 9, fillStyle: '#11d', value: 3 },

          { type: 'hexagon', x: 110, y: 100, l: 9, fillStyle: '#519', value: 18 },
          { type: 'hexagon', x: 100, y: 115, l: 9, fillStyle: '#51d', value: 19 },
          { type: 'hexagon', x: 120, y: 115, l: 9, fillStyle: '#91d', value: 35 },

          { type: 'hexagon', x: 120, y: 85, l: 9, fillStyle: '#515', value: 17 },
          { type: 'hexagon', x: 130, y: 100, l: 9, fillStyle: '#919', value: 34 },
          { type: 'hexagon', x: 140, y: 115, l: 9, fillStyle: '#d1d', value: 51 },

          { type: 'hexagon', x: 140, y: 85, l: 9, fillStyle: '#915', value: 33 },
          { type: 'hexagon', x: 160, y: 85, l: 9, fillStyle: '#d15', value: 49 },
          { type: 'hexagon', x: 150, y: 100, l: 9, fillStyle: '#d19', value: 50 },

          { type: 'hexagon', x: 110, y: 70, l: 9, fillStyle: '#111', value: 0 }
        ].concat(this.sprites_x);
        this.callParent();
        this.setSprites(this.sprites_f);
      },
      listeners: {
        spriteclick: function (item, event) {
          var sprite = item && item.sprite;
          if (sprite) {
            if (sprite.value == 255) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_f);
              this.getSurface().renderFrame();
            } else if (sprite.value == 253) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_d);
              this.getSurface().renderFrame();
            } else if (sprite.value == 171) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_b);
              this.getSurface().renderFrame();
            } else if (sprite.value == 169) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_9);
              this.getSurface().renderFrame();
            } else if (sprite.value == 87) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_7);
              this.getSurface().renderFrame();
            } else if (sprite.value == 85) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_5);
              this.getSurface().renderFrame();
            } else if (sprite.value == 3) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_3);
              this.getSurface().renderFrame();
            } else if (sprite.value == 1) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_1);
              this.getSurface().renderFrame();
            } else if (sprite.value == 0) {
              this.getSurface().removeAll();
              this.getSurface().add(this.sprites_x);
              this.getSurface().renderFrame();
            }
            this.fireEvent('change', sprite.value, sprite.fillStyle)
         }
       }
     }
    });

    Ext.define('Icon.sprite.Hexagon', {
        extend: 'Ext.draw.sprite.Path',
        alias: 'sprite.hexagon',
        type: 'hexagon',
        inheritableStatics: {
            def: {
                processors: {
                    x: 'number',
                    y: 'number',
                    l: 'number'
                },
                aliases: {
                },
                triggers: {
                    x: 'path',
                    y: 'path',
                    l: 'path'
                },
                defaults: {
                    x: 0,
                    y: 0,
                    l: 9
                }
            }
        },
        updatePath: function (path, attr) {
            var x = attr.x,
                y = attr.y,
                l = attr.l,        // side length
                h = attr.l / 2;    // half side length

            path.fromSvgString('M'.concat(x-h, ',', y-h, 'l', [l, h, 0, l, -l, h, -l, -h, 0, -l, 'z']));
        }
    });
    </script>
</head>
<body>
</body>
</html>
