#ifndef UNIVERSAL_CONTROLLER_CLIENT_H
#define UNIVERSAL_CONTROLLER_CLIENT_H

//Bit 8: 0 == analog stick message, 1 == digital button message
#define CONTROLLER_MESSAGE_TYPE_MASK	0x80
#define CONTROLLER_MESSAGE_TYPE_ANALOG	0x00
#define CONTROLLER_MESSAGE_TYPE_BUTTON	0x10


//Bit 7 (Analog): Left / Right stick
#define CONTROLLER_ANALOG_STICK			0x40
#define CONTROLLER_ANALOG_STICK_LEFT	0x00
#define CONTROLLER_ANALOG_STICK_RIGHT	0x40

//Bit 6 (Analog): X / Y axis
#define CONTROLLER_ANALOG_AXIS			0x20
#define CONTROLLER_ANALOG_AXIS_X		0x00
#define CONTROLLER_ANALOG_AXIS_Y		0x20

//Bit 5::1 (Analog): Value
#define CONTROLLER_ANALOG_VALUE_MASK	0x1F

//No Buttons Pressed message
#define CONTROLLER_BUTTON_NONE			0xC0

//Bit 5 (Button): Press / Release
#define CONTROLLER_BUTTON_PRESS_MASK	0x10
#define CONTROLLER_BUTTON_PRESS			0x10
#define CONTROLLER_BUTTON_RELEASE		0x00

//Bit 4::1 (Button): Button address
#define CONTROLLER_BUTTON_VALUE_MASK	0x0F

#define CONTROLLER_BUTTON_SELECT		0x00
#define CONTROLLER_BUTTON_LEFT3			0x01
#define CONTROLLER_BUTTON_RIGHT3		0x02
#define CONTROLLER_BUTTON_START			0x03
#define CONTROLLER_BUTTON_PADUP			0x04
#define CONTROLLER_BUTTON_PADRIGHT		0x05
#define CONTROLLER_BUTTON_PADDOWN		0x06
#define CONTROLLER_BUTTON_PADLEFT		0x07
#define CONTROLLER_BUTTON_LEFT2			0x08
#define CONTROLLER_BUTTON_RIGHT2		0x09
#define CONTROLLER_BUTTON_LEFT1			0x0A
#define CONTROLLER_BUTTON_RIGHT1		0x0B
#define CONTROLLER_BUTTON_TRIANGLE		0x0C
#define CONTROLLER_BUTTON_CIRCLE		0x0D
#define CONTROLLER_BUTTON_CROSS			0x0E
#define CONTROLLER_BUTTON_SQUARE		0x0F

#endif